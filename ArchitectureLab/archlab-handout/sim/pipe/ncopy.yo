                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 
                            | # Loop header
                            |     # xorq 	%rax,%rax
0x000: c0f2f8ffffffffffffff | 	iaddq 	$-8, %rdx
0x00a: 726d01000000000000   | 	jl 		Root		# len < 10
                            | 	
0x013:                      | Loop1:
                            | 
0x013: 50870000000000000000 | 	mrmovq 	(%rdi), %r8
0x01d: 50970800000000000000 | 	mrmovq 	8(%rdi), %r9
0x027: 6288                 | 	andq 	%r8, %r8
0x029: 40860000000000000000 | 	rmmovq 	%r8, (%rsi)
0x033: 40960800000000000000 | 	rmmovq 	%r9, 8(%rsi)
0x03d: 715000000000000000   | 	jle 	Loop2
0x046: c0f00100000000000000 | 	iaddq 	$1, %rax
0x050:                      | Loop2:
0x050: 6299                 | 	andq 	%r9, %r9
0x052: 716500000000000000   | 	jle 	Loop3
0x05b: c0f00100000000000000 | 	iaddq 	$1, %rax
0x065:                      | Loop3:
0x065: 50871000000000000000 | 	mrmovq 	16(%rdi), %r8
0x06f: 50971800000000000000 | 	mrmovq 	24(%rdi), %r9	
0x079: 6288                 | 	andq 	%r8, %r8
0x07b: 40861000000000000000 | 	rmmovq 	%r8, 16(%rsi)
0x085: 40961800000000000000 | 	rmmovq 	%r9, 24(%rsi)	
0x08f: 71a200000000000000   | 	jle 	Loop4
0x098: c0f00100000000000000 | 	iaddq 	$1, %rax
0x0a2:                      | Loop4:
0x0a2: 6299                 | 	andq 	%r9, %r9
0x0a4: 71b700000000000000   | 	jle 	Loop5
0x0ad: c0f00100000000000000 | 	iaddq 	$1, %rax
0x0b7:                      | Loop5:
0x0b7: 50872000000000000000 | 	mrmovq 	32(%rdi), %r8
0x0c1: 50972800000000000000 | 	mrmovq 	40(%rdi), %r9
0x0cb: 6288                 | 	andq 	%r8, %r8
0x0cd: 40862000000000000000 | 	rmmovq 	%r8, 32(%rsi)
0x0d7: 40962800000000000000 | 	rmmovq 	%r9, 40(%rsi)	
0x0e1: 71f400000000000000   | 	jle 	Loop6
0x0ea: c0f00100000000000000 | 	iaddq 	$1, %rax
0x0f4:                      | Loop6:
0x0f4: 6299                 | 	andq 	%r9, %r9
0x0f6: 710901000000000000   | 	jle 	Loop7
0x0ff: c0f00100000000000000 | 	iaddq 	$1, %rax
0x109:                      | Loop7:
0x109: 50873000000000000000 | 	mrmovq 	48(%rdi), %r8
0x113: 50973800000000000000 | 	mrmovq 	56(%rdi), %r9
0x11d: 6288                 | 	andq 	%r8, %r8
0x11f: 40863000000000000000 | 	rmmovq 	%r8, 48(%rsi)
0x129: 40963800000000000000 | 	rmmovq 	%r9, 56(%rsi)	
0x133: 714601000000000000   | 	jle 	Update
0x13c: c0f00100000000000000 | 	iaddq 	$1, %rax
                            | 
                            | 
0x146:                      | Update:
0x146: c0f74000000000000000 | 	iaddq 	$64, %rdi
0x150: c0f64000000000000000 | 	iaddq 	$64, %rsi
                            | 
0x15a:                      | Test1:
0x15a: c0f2f8ffffffffffffff | 	iaddq 	$-8, %rdx	# len - 10
0x164: 751300000000000000   | 	jge		Loop1		
                            | 
                            | # len in [1, ..., 9]
                            | 
0x16d:                      | Root:
0x16d: c0f20600000000000000 | 	iaddq 	$6, %rdx
0x177: 729201000000000000   | 	jl		Left		# len < 4
0x180: 73ce02000000000000   | 	je 		R4			# len = 4
0x189: 76b701000000000000   | 	jg 		Right		# len > 4
                            | 
                            | # len in [1, 2, 3]
0x192:                      | Left:
0x192: c0f20200000000000000 | 	iaddq 	$2, %rdx
0x19c: 725c03000000000000   | 	jl 		R1 			# len = 1
0x1a5: 732003000000000000   | 	je 		R2 			# len = 2
0x1ae: 760a03000000000000   | 	jg 		R3 			# len = 3
                            | 
                            | # len in [5, 6, 7, 8, 9]
0x1b7:                      | Right:
0x1b7: c0f2fdffffffffffffff | 	iaddq 	$-3, %rdx
0x1c1: 72dc01000000000000   | 	jl 		Right_Left	# len in [5, 6]
0x1ca: 736602000000000000   | 	je 		R7			# len = 7
0x1d3: 76f801000000000000   | 	jg 		Right_Right # len in [8, 9]
                            | 
0x1dc:                      | Right_Left:
0x1dc: c0f2ffffffffffffffff | 	iaddq 	$-1, %rdx
0x1e6: 73b802000000000000   | 	je 		R5			# len = 5
0x1ef: 767c02000000000000   | 	jg 		R6			# len = 6
0x1f8:                      | Right_Right:
0x1f8: c0f2fcffffffffffffff | 	iaddq	$-4, %rdx
0x202: 732a02000000000000   | 	je 		R8 			# len = 8
0x20b: 761402000000000000   | 	jg 		R9			# len = 9
                            | 
0x214:                      | R9:
0x214: 50874000000000000000 | 	mrmovq	64(%rdi), %r8
0x21e: 6288                 | 	andq 	%r8, %r8
0x220: 40864000000000000000 | 	rmmovq	%r8, 64(%rsi)
0x22a:                      | R8:
0x22a: 50973800000000000000 | 	mrmovq 	56(%rdi), %r9
0x234: 714702000000000000   | 	jle 	R81
0x23d: c0f00100000000000000 | 	iaddq	$1, %rax
0x247:                      | R81:
0x247: 40973800000000000000 | 	rmmovq	%r9, 56(%rdi)
0x251: 6299                 | 	andq 	%r9, %r9
0x253: 716602000000000000   | 	jle 	R7
0x25c: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x266:                      | R7:
0x266: 50873000000000000000 | 	mrmovq	48(%rdi), %r8
0x270: 6288                 | 	andq 	%r8, %r8
0x272: 40863000000000000000 | 	rmmovq	%r8, 48(%rsi)
0x27c:                      | R6:
0x27c: 50972800000000000000 | 	mrmovq 	40(%rdi), %r9
0x286: 719902000000000000   | 	jle 	R61
0x28f: c0f00100000000000000 | 	iaddq	$1, %rax
0x299:                      | R61:
0x299: 40972800000000000000 | 	rmmovq	%r9, 40(%rdi)
0x2a3: 6299                 | 	andq 	%r9, %r9
0x2a5: 71b802000000000000   | 	jle 	R5
0x2ae: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x2b8:                      | R5:
0x2b8: 50872000000000000000 | 	mrmovq	32(%rdi), %r8
0x2c2: 6288                 | 	andq 	%r8, %r8
0x2c4: 40862000000000000000 | 	rmmovq	%r8, 32(%rsi)
0x2ce:                      | R4:
0x2ce: 50971800000000000000 | 	mrmovq 	24(%rdi), %r9
0x2d8: 71eb02000000000000   | 	jle 	R41
0x2e1: c0f00100000000000000 | 	iaddq	$1, %rax
0x2eb:                      | R41:
0x2eb: 40971800000000000000 | 	rmmovq	%r9, 24(%rdi)
0x2f5: 6299                 | 	andq 	%r9, %r9
0x2f7: 710a03000000000000   | 	jle 	R3
0x300: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x30a:                      | R3:
0x30a: 50871000000000000000 | 	mrmovq	16(%rdi), %r8
0x314: 6288                 | 	andq 	%r8, %r8
0x316: 40861000000000000000 | 	rmmovq	%r8, 16(%rsi)
0x320:                      | R2:
0x320: 50970800000000000000 | 	mrmovq 	8(%rdi), %r9
0x32a: 713d03000000000000   | 	jle 	R21
0x333: c0f00100000000000000 | 	iaddq	$1, %rax
0x33d:                      | R21:
0x33d: 40970800000000000000 | 	rmmovq	%r9, 8(%rdi)
0x347: 6299                 | 	andq 	%r9, %r9
0x349: 715c03000000000000   | 	jle 	R1
0x352: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x35c:                      | R1:
0x35c: 50870000000000000000 | 	mrmovq 	(%rdi), %r8
0x366: 6288                 | 	andq 	%r8, %r8
0x368: 40860000000000000000 | 	rmmovq	%r8, (%rsi)
0x372: 718503000000000000   | 	jle 	Done
0x37b: c0f00100000000000000 | 	iaddq 	$1, %rax
                            | 
                            | 
                            | 
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x385:                      | Done:
0x385: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x386:                      | End:
                            | #/* $end ncopy-ys */
